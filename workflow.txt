1. Create MVC folder

2. Get all npm dependency

3. Connect database

4. Working at port 4000

5. Get token from database

6. Create middlewares to show the specific error when project is broken.

7. authRoute to set the link for another logic function.

8. Controller User to interract with user account.

9. Create user, login user (post method).

10. Get all user detail, get single user detail, delete user, update user (Get method).

11. req.params (When a client requests a URL like /users/123, the value 123 will be 
stored in req.params.id. You can then use this value to perform further processing or 
to retrieve data from a database.)

12. Test User part: (Clear all user database) USE POSTMAN
13. ADD ADMIN role
14. Add Block and Unblock user
POST
    - Register User (create 2 new user)
        {
            check if create same mail, => userCtrl.js will show error 'user already exist'.
        }
    - Login User 
        {
        (Check the user account by enter (if same return the same account)) 
        After that we can get Token
        }

Get
    - Get all user Register - localhost:4000/api/user/all-users
    - Get Specific user data -  localhost:4000/api/user/id

Delete
    - Delete User data
update
    - Update User data 

PUT
    Check admin
        {
            only admin can block or unblock
        }
    - Block User
    - Unblock
    

vendorprivate:


    <div class="row row-cols-2 row-cols-lg-5 g-2 g-lg-3">
		<!-- <% if(product != '') { %>
		  <% product.forEach(function(product, index){ %>
		  <a href="/home/product/<%= product._id %>" class="text-center category__link">
			<div class="category__img category__img--large shadow">
			  <img src="/uploads/<%= product.image %>" alt="<%= product.name %>" loading="lazy">
			</div>
			<div class="pt-1"><%= product.name %></div>
		  </a>
		  <% }) %>
		<% } else { %>
		  <p>No items found.</p>
		<% } %>  -->
	  </div>


    note for orderDetailShipper businessName
    <!-- <tr>
      <td>Vendor:</td>
      <td><%= order.products[0].businessName %></td>
    </tr> -->


    password.js
    // const signupForm = document.querySelector('#signupForm');
// const loginForm = document.querySelector('#loginForm');

// const setErrorMessage = message => {
//     const errorMessageContainer = document.querySelector('.error');
//     errorMessageContainer.innerText = message;
//     errorMessageContainer.style.display = 'block';
// };

// signupForm.addEventListener('submit', e => {
//     e.preventDefault();

//     const passwordValue = form.querySelector('#password').value.trim();

//     const lower = new RegExp("(?=.*[a-z])");
//     const upper = new RegExp("(?=.*[A-Z])");
//     const number = new RegExp("(?=.*[0-9])");
//     const special = new RegExp("(?=.*[!@#$%^&*])");
//     const length = new RegExp("(?=.{8,})");

//     if (passwordValue === "" ||
//         !lower.test(passwordValue) ||
//         !upper.test(passwordValue) ||
//         !number.test(passwordValue) ||
//         !special.test(passwordValue) ||
//         !length.test(passwordValue)) {

//         setErrorMessage('Invalid Password');
//     } else {
//         window.alert('Success! Please go back and login again!');
//         form.submit();
//     }

//     const usernameValue = form.querySelector('#userName').value.trim();

//     if (usernameValue == "" && passwordValue == "") {
//         window.alert('Please fill out all the required fields correctly');
//     }
// });

// signupForm.addEventListener('submit', e => {
//     e.preventDefault();

//     const passwordValue = form.querySelector('#password').value.trim();

//     const lower = new RegExp("(?=.*[a-z])");
//     const upper = new RegExp("(?=.*[A-Z])");
//     const number = new RegExp("(?=.*[0-9])");
//     const special = new RegExp("(?=.*[!@#$%^&*])");
//     const length = new RegExp("(?=.{8,})");

//     if (passwordValue === "" ||
//         !lower.test(passwordValue) ||
//         !upper.test(passwordValue) ||
//         !number.test(passwordValue) ||
//         !special.test(passwordValue) ||
//         !length.test(passwordValue)) {

//         setErrorMessage('Invalid Password');
//     } else {
//         form.submit();
//     }

//     const usernameValue = form.querySelector('#userName').value.trim();

//     if (usernameValue == "" && passwordValue == "") {
//         window.alert('Please fill out all the required fields correctly');
//     }
// });

